{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Standardized Query Language Generator is a Command line tool to automate or create sample database entries for your tables. It's very useful where creating tables and generate rows automatically. Installation pip install sqlg Commands sqlg -i /path/to/your/file - Run sqlg from file. sqlg -help - Print help message and exit. Usage You can tell the json file to sqlg using -i command:: sqlg -i /path/to/your/file Help Once that's done, you can explore the command line script called sqlg :: sqlg --help","title":"Home"},{"location":"#home","text":"Standardized Query Language Generator is a Command line tool to automate or create sample database entries for your tables. It's very useful where creating tables and generate rows automatically.","title":"Home"},{"location":"#installation","text":"pip install sqlg","title":"Installation"},{"location":"#commands","text":"sqlg -i /path/to/your/file - Run sqlg from file. sqlg -help - Print help message and exit.","title":"Commands"},{"location":"#usage","text":"You can tell the json file to sqlg using -i command:: sqlg -i /path/to/your/file","title":"Usage"},{"location":"#help","text":"Once that's done, you can explore the command line script called sqlg :: sqlg --help","title":"Help"},{"location":"column-properties/","text":"Column Properties col_n key: col_1 value: col_type & row_name & file_name ( optional for foreign_key type )","title":"Column Properties"},{"location":"column-properties/#column-properties","text":"","title":"Column Properties"},{"location":"column-properties/#col_n","text":"key: col_1 value: col_type & row_name & file_name ( optional for foreign_key type )","title":"col_n"},{"location":"row-properties/","text":"Row Properties bigint row_type: fixed value: int(???) row_type: random method: from_any length: int(?) method: from_list length: [???] varchar row_type: fixed value = str(??) row_type: random method: from_any length: int(?) method: from_list length: [???] datetime row_type: fixed value = datetime() row_type: date_now row_type: date_between value_1: datetime() value_2: datetime()","title":"Row Properties"},{"location":"row-properties/#row-properties","text":"","title":"Row Properties"},{"location":"row-properties/#bigint","text":"row_type: fixed value: int(???) row_type: random method: from_any length: int(?) method: from_list length: [???]","title":"bigint"},{"location":"row-properties/#varchar","text":"row_type: fixed value = str(??) row_type: random method: from_any length: int(?) method: from_list length: [???]","title":"varchar"},{"location":"row-properties/#datetime","text":"row_type: fixed value = datetime() row_type: date_now row_type: date_between value_1: datetime() value_2: datetime()","title":"datetime"},{"location":"sample/","text":"Sample Json This will create a test table in the mention database:: { \"table_name\": \"test\", \"column_count\": 5, \"column_properties\": { \"col_1\": { \"row_name\": \"device_id\", \"col_type\": \"bigint(20)\" }, \"col_2\": { \"row_name\": \"start\", \"col_type\": \"varchar(20)\" }, \"col_3\": { \"row_name\": \"start_time\", \"col_type\": \"datetime\" }, \"col_4\": { \"row_name\": \"finish\", \"col_type\": \"varchar(20)\" }, \"col_5\": { \"row_name\": \"finish_time\", \"col_type\": \"datetime\" } }, \"row_count\": 1, \"row_properties\": { \"row_1\": { \"row_type\": \"random\", \"method\": \"from_any\", \"length\": 3 }, \"row_2\": { \"row_type\": \"fixed\", \"value\": \"YES\" }, \"row_3\": { \"row_type\": \"fixed\", \"method\": \"date_now\" }, \"row_4\": { \"row_type\": \"fixed\", \"value\": \"YES\" }, \"row_5\": { \"row_type\": \"random\", \"method\": \"date_between\", \"value_1\": \"2018-08-21 14:11:09\", \"value_2\": \"2020-08-21 14:11:09\" } } }","title":"Sample Json"},{"location":"sample/#sample-json","text":"This will create a test table in the mention database:: { \"table_name\": \"test\", \"column_count\": 5, \"column_properties\": { \"col_1\": { \"row_name\": \"device_id\", \"col_type\": \"bigint(20)\" }, \"col_2\": { \"row_name\": \"start\", \"col_type\": \"varchar(20)\" }, \"col_3\": { \"row_name\": \"start_time\", \"col_type\": \"datetime\" }, \"col_4\": { \"row_name\": \"finish\", \"col_type\": \"varchar(20)\" }, \"col_5\": { \"row_name\": \"finish_time\", \"col_type\": \"datetime\" } }, \"row_count\": 1, \"row_properties\": { \"row_1\": { \"row_type\": \"random\", \"method\": \"from_any\", \"length\": 3 }, \"row_2\": { \"row_type\": \"fixed\", \"value\": \"YES\" }, \"row_3\": { \"row_type\": \"fixed\", \"method\": \"date_now\" }, \"row_4\": { \"row_type\": \"fixed\", \"value\": \"YES\" }, \"row_5\": { \"row_type\": \"random\", \"method\": \"date_between\", \"value_1\": \"2018-08-21 14:11:09\", \"value_2\": \"2020-08-21 14:11:09\" } } }","title":"Sample Json"}]}